apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: relay-locust-load-test
  namespace: argo
  labels:
    workflows.argoproj.io/creator: system-serviceaccount-argo-argo-server
spec:
  arguments:
    parameters:
    - name: test_factory_branch
      value: main
    - name: test_duration
      value: "30s"
    - name: test_users
      value: "10"
  entrypoint: main
  podGC:
    strategy: OnWorkflowCompletion
  templates:
  - name: main
    dag:
      tasks:
      # Relay
      - name: relay-update-configuration
        templateRef:
          name: deploy-relay
          template: relay-update-configuration
        arguments:
          parameters:
          - name: relay_version
            value: '{% raw %}{{workflow.parameters.test_factory_branch}}{% endraw %}'
      - name: relay-wait-for-rollout
        templateRef:
          name: deploy-relay
          template: relay-wait-for-rollout
        arguments: {}
        depends: relay-update-configuration
      # Locust
      - name: locust-update-configuration
        templateRef:
          name: deploy-locust
          template: locust-update-configuration
        arguments:
          parameters:
          - name: relay_version
            value: '{% raw %}{{workflow.parameters.test_factory_branch}}{% endraw %}'
      - name: locust-wait-for-rollout
        templateRef:
          name: deploy-locust
          template: locust-wait-for-rollout
        arguments: {}
        depends: locust-update-configuration
      # Test!
      - name: run-test
        templateRef:
          name: run-test
          template: run-test
        arguments:
          parameters:
          - name: test_duration
            value: '{% raw %}{{workflow.parameters.test_duration}}{% endraw %}'
          - name: test_users
            value: '{% raw %}{{workflow.parameters.test_users}}{% endraw %}'
        depends: "relay-wait-for-rollout && locust-wait-for-rollout"
    inputs: {}
    metadata: {}
    outputs: {}
  ttlStrategy:
    secondsAfterCompletion: 3600
  workflowMetadata:
    labels:
      example: "true"
