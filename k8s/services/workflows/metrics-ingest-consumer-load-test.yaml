apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: metrics-ingest-consumer-load-test
  namespace: argo
spec:
  # Disallow to run this workflow in parallel (with itself or relay-load-test)
  synchronization:
    mutex:
      name:  relay-load-test
  arguments:
    parameters:
    - name: test_factory_branch
      value: "main"
    - name: num_messages
      value: "default"
    - name: releases
      value: "default"
    - name: environments
      value: "default"
    - name: comment
      value: ""
    - name: clear_kafka_queue
      value: "true"
  entrypoint: main
  podGC:
    strategy: OnWorkflowCompletion
  templates:
  - name: main
    dag:
      tasks:
      # Prepare
      # TODO we need to split this (since it fetches ingest-load-tester, relay, etc.)
      - name: prepare-run
        templateRef:
          name: z-prepare-run
          template: prepare-run
      # Stop sentry
      - name: sentry-stop-all
        templateRef:
          name: z-sentry
          template: sentry-stop-all
        depends: prepare-run
      # Clear previous state
      - name: flush-all-kafka
        templateRef:
          name: z-kafka
          template: flush-all-kafka
        when: "{% raw %}{{workflow.parameters.clear_kafka_queue}}{% endraw %} == true"
        depends: sentry-stop-all
      - name: apply-topic-config
        templateRef:
          name: z-kafka
          template: apply-topic-config
        arguments:
          artifacts:
          - name: test-factory-src
            from: '{% raw %}{{workflow.outputs.artifacts.test-factory-src}}{% endraw %}'
        when: "{% raw %}{{workflow.parameters.clear_kafka_queue}}{% endraw %} == true"
        depends: flush-all-kafka
      - name: flush-all-memcached
        templateRef:
          name: z-memcached
          template: flush-all-memcached
        depends: sentry-stop-all
      - name: reset-and-run-migrations
        templateRef:
          name: z-postgres
          template: reset-and-run-migrations
        arguments:
          parameters:
          - name: sentry_sha
            value: '{% raw %}{{workflow.outputs.parameters.sentry_sha}}{% endraw %}'
        depends: "sentry-stop-all && prepare-run"
      # Deploy sentry
      - name: sentry-update-configuration
        templateRef:
          name: z-sentry
          template: sentry-update-configuration
        depends: "prepare-run && apply-topic-config && flush-all-memcached && reset-and-run-migrations"
      # push metric on kafka topic
      - name: run-ingest-metrics-generator
        templateRef:
          name: z-data-generator
          template: run-ingest-metrics-generator
        arguments:
          parameters:
          - name: num_messages
            value: '{% raw %}{{workflow.parameters.num_messages}}{% endraw %}'
          - name: releases
            value: '{% raw %}{{workflow.parameters.releases}}{% endraw %}'
          - name: environments
            value: '{% raw %}{{workflow.parameters.environments}}{% endraw %}'
          artifacts:
          - name: ingest_metrics_generator_settings
            from: '{% raw %}{{workflow.outputs.artifacts.ingest_metrics_generator_settings}}{% endraw %}'
        depends: sentry-update-configuration
      # wait for ingest metrics consumer
      - name: wait-clear-kafka-queue
        templateRef:
          name: z-influxdb-monitor
          template: infulxdb-monitor
        depends: run-ingest-metrics-generator
    inputs: {}
    metadata: {}
    outputs: {}
  ttlStrategy:
    secondsAfterCompletion: 86400
