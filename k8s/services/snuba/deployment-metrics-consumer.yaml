{% set metrics_consumer_replicas = 1 %}

{% set service = "snuba" %}
{% set configmap = "snuba" %}
{% set consumer_nodepool = "default" %}
{% set envoy_cluster = "snuba" %}
{% set snuba_config = "settings.py" %}
{% set snuba_settings = "/etc/snuba/" + snuba_config %}
{% set image = values.image_name + ":" + values.image_tag %}
{% set config_version = md5template("templates/" + snuba_config) %}

{% set volume_mounts = [
{
  "name": "snuba-config",
  "mountPath": snuba_settings,
  "subPath": snuba_config,
  "readOnly": true,
},
{
  "name": "dshm",
  "mountPath": "/dev/shm"
}
] | tojson %}

{% set base_snuba_volumes = [
{
  "name": "snuba-config",
  "configMap": {
    "name": configmap,
    "items": [{
      "key": snuba_config,
      "path": snuba_config,
    }]
  }
},
{
  "name": "dshm",
  "emptyDir": { "medium": "Memory" }
}
] %}

{% set volumes = base_snuba_volumes | tojson %}

{% set environ = [
  {
    "name": "SNUBA_SETTINGS",
    "value": snuba_settings,
  },
] | tojson %}

#########################

{% set component = "metrics-consumer" %}
{% set processes = 1 %}
{% set cpu_per_process_request = 1000 %}
{% set cpu_per_process_limit = 2000 %}
{% set memory_per_process_request = 500 %}
{% set memory_per_process_limit = 650 %}

{% set consumer_group = "snuba-metrics-consumers" %}
{% set batch_time = 1000 %}
{% set batch_size = 1000 %}

{% set labels = {
  "service": service,
  "component": component,
} | tojson %}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ service }}-{{ component }}
  labels: {{ labels }}
spec:
  replicas: {{ metrics_consumer_replicas }}
  selector:
    matchLabels: {{ labels }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 100%
      maxUnavailable: 100%
  minReadySeconds: 30
  template:
    metadata:
      labels: {{ labels }}
      annotations:
        configVersion: {{ config_version }}
    spec:
      initContainers:
      - {{ port_forward_initcontainer(["8125/udp"]) }}
      # - { xds_proxy_initcontainer(envoy_cluster) }}
      containers:
      - image: {{ image }}
        name: {{ component }}
        args:
        - multistorage-consumer
        - --storage
        - metrics_counters_buckets
        - --storage
        - metrics_distributions_buckets
        - --storage
        - metrics_buckets
        - --consumer-group
        - {{ consumer_group }}
        - --max-batch-time-ms
        - "{{ batch_time }}"
        - --max-batch-size
        - "{{ batch_size }}"
        - --processes
        - "{{ processes }}"
        - --input-block-size
        - "8000000"
        - --output-block-size
        - "8000000"
        - --queued-max-messages-kbytes
        - "500000"
        - --queued-min-messages
        - "1000000"
        - --auto-offset-reset
        - earliest
        volumeMounts: {{ volume_mounts }}
        env: {{ environ }}
        resources:
          requests:
            cpu: {{ processes * cpu_per_process_request }}m
            memory: {{ processes * memory_per_process_request }}Mi
          limits:
            cpu: {{ processes * cpu_per_process_limit }}m
            memory: {{ processes * memory_per_process_limit }}Mi
      # - { envoy_sidecar(envoy_cluster, preStopWait=5, version="1.11.0") }}
      volumes: {{ volumes }}
