{% set http_port = 3000 %}
{% set config_dir = "/etc/relay" %}
{% set main_threads_per_process = 30 %}
{% set use_envoy_proxy = True %}

{% set environments = [
  {
    "name": "main",
    "config": {
      "labels": {},
    },
  },
]
%}

{% for environment in environments %}

{% set env_name = environment['name'] %}
{% set env_values = values.environments[env_name]|default({}) %}
{% set config = environment['config'] %}
{% set deployment_name = "relay-" + env_name %}

{% set labels = {
  "service": "relay",
  "environment": env_name,
} %}
{% set _ = labels.update(config['labels']) %}
{% set labels = labels | tojson %}
{% set configmap_subpath = "config_" ~ env_name ~ ".yml" %}

{% set autoscaler = env_values.autoscaler|default({"enabled": False}) %}
{% set image = env_values.image_name + ':' + env_values.image_tag %}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ deployment_name }}
  labels: {{ labels }}
spec:
  {% if not autoscaler.enabled %}
  replicas: {{ env_values['replicas'] }}
  {% endif %}
  selector:
    matchLabels:
      service: relay
      environment: {{ env_name }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 100%
  minReadySeconds: 5
  template:
    metadata:
      labels: {{ labels }}
      annotations:
        cluster-autoscaler.kubernetes.io/safe-to-evict: "false"
        configVersion: "{{ md5template("templates/config.yaml") }}"
    spec:
      nodeSelector:
        nodepool.sentry.io/name: loads
      # Dedicated node pools have a taint that we should tolerate
      tolerations:
      - key: "nodepool-dedicated"
        operator: "Equal"
        value: "loads"
        effect: "NoSchedule"
      terminationGracePeriodSeconds: 30
      initContainers:
        # Telegraf statsd
        - {{ port_forward_initcontainer(["8125/udp"]) }}
        - {{ geoip_initcontainer() }}
        # FIXME: generate config dynamically?
        - name: init-relay-credentials
          image: busybox:1.32
          command:
            - sh
            - -c
            - |
              echo '
              {
                "secret_key": "tAF80bZG7Z3iX43Jv3tQgXroFDgyO81o75Xn7cdfmUc",
                "public_key": "cpOFOeo3cfa12IITjceU6k5c7Bn18Imr7ktB9BLQxxI",
                "id": "392ccd58-d1d9-45a9-a826-6da9a3454837"
              }' > {{ config_dir }}/credentials.json
          volumeMounts:
            - name: relay-config-dir
              mountPath: {{ config_dir }}
      containers:
        - image: "{{ image }}"
          name: relay
          args:
            - run
            - --config
            - {{ config_dir }}
          volumeMounts:
            - name: relay-config
              mountPath: {{ config_dir }}/config.yml
              subPath: {{ configmap_subpath }}
              readOnly: true
            - name: relay-config-dir
              mountPath: {{ config_dir }}/credentials.json
              subPath: credentials.json
              readOnly: true
            - {{ geoip_volumemount() }}
          env:
            # Workaround for https://github.com/getsentry/relay/issues/672
            - name: RELAY_PORT
              value: "{{ http_port }}"
          resources:
            requests:
              cpu: 2000m
              memory: 2000Mi
            limits:
              cpu: {{ main_threads_per_process * 1000 }}m
              memory: 4000Mi
          livenessProbe:
            httpGet:
              path: /api/relay/healthcheck/live/
              port: {{ http_port }}
            initialDelaySeconds: 2
            successThreshold: 1
            failureThreshold: 4
            periodSeconds: 2
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /api/relay/healthcheck/ready/
              port: {{ http_port }}
            initialDelaySeconds: 3
            successThreshold: 1
            failureThreshold: 2
            periodSeconds: 1
            timeoutSeconds: 1
          lifecycle:
            preStop:
              exec:
                command:
                - /bin/sleep
                - "5"
      volumes:
        - name: relay-config
          configMap:
            name: relay
        # - name: relay-credentials
        #   secret:
        #     secretName: service-relay
        - name: relay-config-dir
          emptyDir: {}
        - {{ geoip_volume() }}
      dnsConfig:
        options:
          - name: ndots
            value: "1"
---
{% if autoscaler.enabled %}
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: {{ deployment_name }}
  labels: {{ labels }}
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ deployment_name }}
  minReplicas: {{ autoscaler.min }}
  maxReplicas: {{ autoscaler.max }}
  targetCPUUtilizationPercentage: {{ autoscaler.target_cpu }}
{% endif %}
---
{% endfor %}
